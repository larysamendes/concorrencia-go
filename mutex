package main

import (
	"fmt"
	"sync"
	"time"
)

type Counter struct {
	mu    sync.Mutex
	value int
}

func (c *Counter) Increment() {
	c.mu.Lock()   // Bloqueia o acesso
	defer c.mu.Unlock() // Garante que desbloqueia no final

	c.value++
	fmt.Println("Counter:", c.value)
}

func main() {
	var wg sync.WaitGroup
	counter := Counter{}

	for i := 0; i < 5; i++ {
		wg.Add(1)
		go func() {
			defer wg.Done()
			counter.Increment()
		}()
	}

	wg.Wait() // Espera todas as goroutines terminarem
}
